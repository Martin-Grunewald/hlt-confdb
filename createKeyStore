#!/bin/bash

PASS="alkekengi"

function help() {
echo -e "Create (or recreate) a key store to sing .jar file, using the key associated to the alias \"$USER\""
  echo -e
  echo -e "Usage:"
  echo -e "\tcreateKeyStore [--help|-h]"
  echo -e "\t\tprint this message and exits."
  echo -e
  echo -e "\tcreateKeyStore [--import|-i certificate.der]"
  echo -e "\t\tcreate a new keystore, import an X.509 certificate in PEM format and associate it to the alias \"$USER\""
  echo -e "\t\tNote: this assumes that the certificate is stored in the file CERT, with the name \"Imported Certificate\""
  echo -e
  echo -e "\tcreateKeyStore [--rebuild|-r]"
  echo -e "\t\tcreate a new keystore with password \"$PASS\", create a new key and associate it to the alias \"$USER\""
  echo -e
}

function import() {
  rm -f ~/.keystore
  CERT="$1"
  read -p "Java keystore password: " -s PASS
  echo
  keytool -importkeystore \
    -srckeystore "$CERT" \
    -srcstoretype "PKCS12" \
    -srcalias "Imported Certificate" \
    -deststorepass "$PASS" \
    -destkeypass "$PASS" \
    -destalias "$USER"
}

function rebuild() {
  rm -f ~/.keystore
  keytool -genkeypair \
          -dname "CN=$(finger -p -l -m $USER | grep 'Name: ' | sed -e's/.*Name: //'), OU=CERN, O=CMS, L=Geneva, S=Switzerland, C=EU" \
          -alias "$USER" \
          -validity 1096 \
          -storepass "$PASS" \
          -keypass "$PASS"
}


if [ "$1" == "--help" ] || [ "$1" == "-h" ] || [ "$1" == "" ]; then
  help
  if ! [ -f ~/.keystore ]; then
    echo -e
    echo -e "No Java keystore found. Please create one with \"$0 --import CERT\" or \"$0 --rebuild\"."
  fi
  exit 0
elif [ "$1" == "--import" ] || [ "$1" == "-i" ]; then
  if ! [ -f "$2" ]; then
    help
    exit 1
  fi
  import "$2"
  exit 0
elif [ "$1" == "--rebuild" ] || [ "$1" == "-r" ]; then
  rebuild
  exit 0
fi
